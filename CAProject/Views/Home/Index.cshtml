@{
    ViewData["Title"] = "Home Page";
    PaginatedList<Product> paginatedList = (PaginatedList<Product>)ViewData["paginatedList"];
    var prevDisabled = !paginatedList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !paginatedList.HasNextPage ? "disabled" : "";
    List<Cart> cart = (List<Cart>)ViewData["Cart"];

    Dictionary<int, int> paginatedStockCount = (Dictionary<int, int>)ViewData["paginatedStockCount"];
}

<link href="~/css/Home.css" rel="stylesheet" type="text/css" />

<style>
    

    @*.product-item {
        display: grid;
        grid-template-areas: "image" "name" "description" "add-to-cart";
        grid-template-columns: 1fr;
        grid-template-rows: 3fr 0.5fr 3fr 1fr;
        align-content: center;
        justify-content: center;
        align-items: center;
        justify-items: center;
        border: 0.1rem solid black;
        height: 25rem;
        width: 20rem;
        margin: 0.5rem;
        padding-top: 0.5rem;
    }*@

    

  @*  .product-item img {
        grid-area: image;
        width: 10rem;
        height: 10rem;
        padding: 0.2rem;
    }*@

    
</style>

<div style="font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif">
    <h2>PRODCUTS</h2>
    <hr />
</div>

<div class="product-container">
    @foreach (Product product in paginatedList)
    {
        <div class="product-item">
            <div>
                <a href="@Url.Action("Index", "ProductPg", new { productid = product.Id })">
                    <img src=@product.Image alt=@product.Name class="home_item_img" />
                </a>
            </div>
            <div class="home_desc_container">
                <div>
                    <a href="@Url.Action("Index", "ProductPg", new { productid = product.Id })">
                        <h5>@product.Name</h5>
                    </a>
                </div>
                <div class="product_desc">@product.Description</div>
            </div>
            <div>
                @if (paginatedStockCount[product.Id] > 0)
                {
                    <button class="btn btn-primary add-to-cart" product_id=@product.Id><span class="mr-1">$@product.Price</span>Add To Cart</button>
                }
                else
                {
                    <button value=@product.Id class="btn btn-danger" disabled>
                        Out Of Stock
                    </button>
                }
            </div>
        </div>
    }
</div>

<a asp-action="Index"
   asp-route-pageNumber="@(paginatedList.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-pageNumber="@(paginatedList.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>

@section Scripts
{
    <script src="~/js/Home_AddToCart.js"></script>
}

<script>
    window.onload = function () {
        // tempCart is a string of productId
        // 1,2,2 means user currently added product 1 once and product 2 twice
        let addToCartButton = document.getElementsByClassName("add-to-cart-button");
        for (let i = 0; i < addToCartButton.length; i++) {
            addToCartButton[i].onclick = function (event) {
                let tempCart = sessionStorage.getItem("tempCart");
                if (tempCart === null)
                    sessionStorage.setItem("tempCart", event.target.value);
                else
                    sessionStorage.setItem("tempCart", tempCart + "," + event.target.value);
            }
        }
    }
</script>
